<?php

namespace [% namespace %];

use Session;
use [% app_name %]\Http\Controllers\Controller;
use [% request_fullname %];
[% use_command_placeholder %]

class [% controller_name %] extends Controller
{
    /**
     * Display a listing of the [% model_name_plural %] .
     *
     * @return Illuminate\View\View
     */
    public function index()
    {
        $[% model_name_plural %] = [% model_name_class %]::[% with_relations_for_index %]paginate([% models_per_page %]);

        return view('[% index_view_name %]'[% view_variables_for_index %]);
    }

    /**
     * Show the form for creating a new [% model_name %].
     *
     * @return Illuminate\View\View
     */
    public function create()
    {
        [% relation_collections %]
        
        return view('[% create_view_name %]'[% view_variables_for_create %]);
    }

    /**
     * Store a new [% model_name %]  in the storage.
     *
     * @param [% request_fullname %] $request
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function store([% request_name %] $request)
    {
        [% call_affirm %]
        [% model_name_class %]::create($this->getRequestsData($request));
        Session::flash('success_message', '[% model_name_class %] was added!');

        return redirect()->route('[% index_route_name %]');
    }

    /**
     * Display the specified [% model_name %].
     *
     * @param int $id
     *
     * @return Illuminate\View\View
     */
    public function show($id)
    {
        $[% model_name %] = [% model_name_class %]::[% with_relations_for_show %]findOrFail($id);

        return view('[% show_view_name %]'[% view_variables_for_show %]);
    }

    /**
     * Show the form for editing the specified [% model_name %].
     *
     * @param int $id
     *
     * @return Illuminate\View\View
     */
    public function edit($id)
    {
        $[% model_name %] = [% model_name_class %]::findOrFail($id);
        [% relation_collections %]

        return view('[% edit_view_name %]'[% view_variables_for_edit %]);
    }

    /**
     * Update the specified [% model_name %] in the storage.
     *
     * @param  int $id
     * @param [% request_fullname %] $request
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function update($id, [% request_name %] $request)
    {
        [% call_affirm %]
        $[% model_name %] = [% model_name_class %]::findOrFail($id);
        $[% model_name %]->update($this->getRequestsData($request));
        Session::flash('success_message', '[% model_name_class %] was updated!');

        return redirect()->route('[% index_route_name %]');
    }

    /**
     * Remove the specified [% model_name %] from the storage.
     *
     * @param  int $id
     *
     * @return Illuminate\Http\RedirectResponse | Illuminate\Routing\Redirector
     */
    public function destroy($id)
    {
        $[% model_name %] = [% model_name_class %]::findOrFail($id);
        $[% model_name %]->delete();
        Session::flash('success_message', '[% model_name_class %] was deleted!');

        return redirect()->route('[% index_route_name %]');
    }
[% affirm_method %]
    /**
     * Get the data from the givin request.
     *
     * @param [% request_fullname %] $request
     *
     * @return array
     */
    protected function getRequestsData([% request_name %] $request)
    {
        $data = $request->all();
[% file_snippet %]
[% boolean_snippet %]
[% string_to_null_snippet %]
        return $data;
    }
[% upload_method %]
}
